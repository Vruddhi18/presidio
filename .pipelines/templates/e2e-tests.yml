parameters:
  - name: test_suite
    type: string
    default: ''
  - name: analyzer_base_url
    type: string
    default: ''
  - name: anonymizer_base_url
    type: string
    default: ''
steps:
    - script: |
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    displayName: 'Set up QEMU'

    - script: |
          docker buildx create --use --name mybuilder
          docker buildx inspect mybuilder --bootstrap
      displayName: Set up Docker Buildx

    - task: DockerCompose@0
      displayName: Start Presidio Cluster
      inputs:
          action: Run services
          projectName: 'microsoft_presidio'
          dockerComposeFile: docker-compose.yml
          buildImages: false
          buildArguments: '--platform linux/amd64,linux/arm64'
      # Start cluster when testing against remote cluster, when an external url is not provided.
      condition: eq('${{ parameters.anonymizer_base_url }}', '')

    - task: UsePythonVersion@0
      inputs:
          versionSpec: '3.10'

    - script: |
          set -eux  # fail on error
          python -m venv env
          source env/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-azurepipelines
          python -m spacy download en_core_web_lg
      workingDirectory: e2e-tests
      displayName: Install dependencies

    - script: |
          set -eux  # fail on error
          source env/bin/activate
          sleep 60
          if [ -z ${TEST_SUITE} ]; then pytest -v; else pytest -v -m ${TEST_SUITE}; fi
      workingDirectory: e2e-tests
      env:
        ${{ if ne(parameters.analyzer_base_url, '') }}:
          ANALYZER_BASE_URL: ${{ parameters.analyzer_base_url }}
        ${{ if ne(parameters.anonymizer_base_url, '') }}:
          ANONYMIZER_BASE_URL: ${{ parameters.anonymizer_base_url }}
        TEST_SUITE:  ${{ parameters.test_suite }}
      displayName: Run tests
    - task: DockerCompose@0
      displayName: Docker Logs
      inputs:
        projectName: 'microsoft_presidio'
        dockerComposeCommand: logs
        dockerComposeFile: docker-compose.yml
        buildImages: false
      condition: always()
